#pragma once

enum WINMODE
{
	MODE_FULL, 
	MODE_WIN
};

enum TEXTYPE
{
	TEXTYPE_SINGLE,
	TEXTYPE_MULTI
};

enum BUFFERTYPE
{
	BUFFERTYPE_TRICOL,
	BUFFERTYPE_RCCOL,
	BUFFERTYPE_RCTEX,
	BUFFERTYPE_UNITTEX,
	BUFFERTYPE_TERRAINCOL,
	BUFFERTYPE_TERRAINTEX,
	BUFFERTYPE_CUBE,
	BUFFERTYPE_UI,
};

enum KEYID // 키의 상태에 따른반환값
{
	KEYDOWN,
	KEYDRAG,
	KEYUP,
	KEYEND
};

enum SCENEID
{
	SCENE_LOGO,
	SCENE_STAGE1,
	SCENE_STAGE2,
	SCENE_BOSS,
	SCENE_TUTORIAL,
	SCENE_MOVIE,
};

enum OBJID
{
	OBJ_TERRAIN,
	OBJ_CUBE,
	OBJ_ITEM,
	OBJ_PLAYER,
	OBJ_MONSTER,
	OBJ_EFFECT,
	OBJ_UI,
	OBJ_ETC,
	OBJ_TRAP,
	OBJ_END
};

enum ANGLE
{
	ANGLE_X,
	ANGLE_Y,
	ANGLE_Z,
	ANGLE_END
};

enum BEATDIR
{
	BEAT_LEFT,
	BEAT_RIGHT,
};

enum STATEKEY
{
	STAT_IDLE,
	STAT_ATT,
	STAT_HIT,
	STAT_MOVE,
	STAT_ROT,
	STAT_GUN,
	STAT_IN,
	STAT_OUT,
	STAT_OUTATT,
	STAT_HIDE,
	STAT_DDR,
	STAT_END
};

enum ITEMSLOT
{
	ITEMSLOT_EQUIP,		
	ITEMSLOT_ITEM,		
	ITEMSLOT_SPELL,
	ITEMSLOT_END,

};

enum WEAPONID
{
	WP_DAGGER,
	WP_BROAD,
	WP_SPEAR,
	WP_WHIP,
	WP_BLUNDERBUSS,
	WP_END,
};
enum BEATSTAGE
{
	BEAT_TUTORIAL,
	BEAT_ZONE1_1,
	BEAT_CONGA,
	BEAT_ZONE2_1,
	BEAT_ZONE3_1,
};

enum CONNECTWHERE
{
	CON_UP,
	CON_DOWN,
	CON_LEFT,
	CON_RIGHT
};